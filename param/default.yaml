frame_id: map
horizon: 1.8 # this horizon should be smaller than target_manager/horizon
n_target: 2 # number of target
early_end: 1.0 # horizon - early_end = period
desired_position_smoothing: 0.9 # [0,1]
history_collect_interval: 0.2 # [s]
preplanner:
  seed_obst_clear_rad: 0.6 # clearing radius for remove initial planning point for preplanner
  n_max_step: 3 # maximum number of discretiazation over horizon
  edf_max_dist: 2.0 # max distance to be calculated in euclidean distance field
  max_bearing: 1.25 # max distance to be calculated in euclidean distance field
  des_dist: 2.5 # desired relative distance to target
  score_field_resolution: 0.4 # resolution for visibility fields
  score_field_max_connect_vel: 4.0 # [m/s] maximum connectable edge length
  score_field_node_stride: 1 # stride to build candidate nodes on scorefield
  score_field_margin:
    xy: 3.0 # extension to +/-xy
    z_top: 1.0 # extension to +/-z w.r.t target at each step
    z_bottom: 0.0 # extension to +/-z w.r.t target at each step
  collision_clearance: 0.6 # increasing this can sort out unsafe points and can reduce graph build time
  occlusion_clearance: 0.3
  target_collision_simple: false # true = simple sphere check / false = ellipsoid checking
  target_collision_sphere_rad: 0.6
  target_collision_ellipse_line:  # when checking line collision with targets move, use this scale for target ellipsoid.
    # make sure r = r_{drone} + r_{human}
    x: 1.2
    y: 1.2
    z: 2.5
  target_collision_ellipse_step:  # vsf candidate nodes outside of this volume (also inter-ellipse) at each step .
    # make sure r = r_{drone} + r_{human}
    x: 2.0
    y: 2.0
    z: 4.0
  target_occlusion_ellipse: # volume to consider inter occlusion (semi-axis length) and target-collision
    x: 0.6
    y: 0.6
    z: 0.8
  n_thread: 8 # number of thread to traverse score field
  weight:  # weight when finding optical graph solution
    distance: 10.0
    bearing: 1.0
    visibility: 5.0
    rel_distance: 8.0
    init_vel_dir: 3.0
smooth_planner:
  preplan_track_rad: 0.3 # [m] linear inequality to confine deviation from preplanned waypoint (<= occlusion_clearance)
  poly_order: 5,
  length_step: 0.5 # [m] step size to form corridors between waypoints
  weight:
    qp_vel: 0.0,
    qp_accel: 0.5
    qp_jerk: 0.02
visualization:
  bearing_dt: 0.2
  history_bearing_arrow:
    a: 0.6 # alpha [0,1]
    w: 0.05 # arrow width
    target1:
      r: 0.8
      g: 0.3
      b: 0.3
    target2:
      r: 0.3
      g: 0.3
      b: 0.8
  edf_volume:
    r: 0.8
    g: 0.8
    b: 0.
    a: 0.1
  target_collision_volume:
    r: 0.8
    g: 0.6
    b: 0.6
    a: 0.5
  preplanner_bearing_arrow:
    r: 0.9
    g: 0.9
    b: 0.9
    a: 1.0
    w: 0.03
  corridor_color:
    r: 0.1
    g: 0.7
    b: 0.7
    a: 0.4
  smooth_path_eval_pts: 10
